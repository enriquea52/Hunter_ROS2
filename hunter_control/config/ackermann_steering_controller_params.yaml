controller_manager:
  ros__parameters:
    update_rate: 30 # Hz
    use_sim_time: true

    ackermann_steering_controller:
      type: ackermann_steering_controller/AckermannSteeringController

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

joint_state_broadcaster:
  ros__parameters:
    extra_joints: ["fr_right_joint", "fr_left_joint"]

ackermann_steering_controller:
  ros__parameters:
    # Model
    reference_timeout: 2.0
    front_steering: true
    open_loop: false
    velocity_rolling_window_size: 10
    position_feedback: false
    use_stamped_vel: false
    rear_wheels_names: [re_right_joint, re_left_joint]
    front_wheels_names: [fr_steer_right_joint, fr_steer_left_joint]

    wheelbase: 0.650
    front_wheel_track: 0.605
    rear_wheel_track: 0.605
    front_wheels_radius: 0.330
    rear_wheels_radius: 0.330

    # # Odometry
    # odom_frame_id: odom
    # base_frame_id: base_link
    # publish_rate: 30.0 # publish rate of odom and tf
    # open_loop: false # if True, uses cmd_vel instead of hardware interface feedback to compute odometry
    # enable_odom_tf: true # If True, publishes odom<-base_link TF
    # odom_only_twist: false # If True, publishes on /odom only linear.x and angular.z; Useful for computing odometry in another node, e.g robot_localization's ekf
    # pose_covariance_diagonal: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # Need to be set if fusing odom with other localization source
    # twist_covariance_diagonal: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # Need to be set if fusing odom with other localization source
    # velocity_rolling_window_size: 10 # Rolling window size of rcppmath::RollingMeanAccumulator applied on linear and angular speeds published on odom

    # Rate Limiting
    traction: # All values should be positive
      min_velocity: 0.0
      max_velocity: 3.0
      min_acceleration: 0.0
      max_acceleration: 5.0
      min_deceleration: 0.0
      max_deceleration: 8.0
      # min_jerk: 0.0
      # max_jerk: 1000.0
    steering:
      min_position: -1.57
      max_position: 1.57
      # min_velocity: 0.0
      max_velocity: 1.0
      # min_acceleration: 0.0
      # max_acceleration: 1000.0

    # # cmd_vel input
    # cmd_vel_timeout: 500 # In milliseconds. Timeout to stop if no cmd_vel is received
    # use_stamped_vel: false # Set to True if using TwistStamped.

    # publish_ackermann_command: true # Publishes AckermannDrive. The speed does not comply to the msg definition, it the wheel angular speed in rad/s.